openapi: 3.0.0
info:
  title: Sample Bot Mgmt API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1
servers:
  - url: http://3.7.230.113:4000/
    description: Optional server description, e.g. Main (production) server
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Login:
      properties:
        username:
          type: string
        password:
          type: string

    BotCreate:
      properties:
        bot_id:
          type: string
        associated_application:
          type: string
        associated_service_provider:
          type: string
        deployed_country:
          type: string
        deployed_state:
          type: string
        deployed_region:
          type: string
        deployed_date:
          type: string
        ip_address:
          type: string
        one_wheel_two_wheel_mode:
          type: string
        remote_auto_mode:
          type: string
        posting_frequency_packet_1:
          type: number
        posting_frequency_packet_1A:
          type: number
        posting_frequency_packet_2:
          type: number
        posting_frequency_packet_3:
          type: number
        hub_motor_rpm_limit:
          type: number
        hub_motor_timeout:
          type: number
        hub_motor_current_limit:
          type: number
        wheel_circumference:
          type: number
        steering_motor_rpm:
          type: number
        steering_motor_timeout:
          type: number
        steering_motor_encoder_front_caliberation:
          type: number
        steering_motor_encoder_rear_caliberation:
          type: number
        dba4_lift_motor_rpm:
          type: number
        dba4_lift_motor_timeout:
          type: number
        dba7_lift_motor_rpm:
          type: number
        dba7_lift_motor_timeout:
          type: number
        thermal_system_setpoint_low_side:
          type: number
        thermal_system_setpoint_high_side:
          type: number
        hysteris_high_side:
          type: number
        hysteris_low_side:
          type: number
        battery_cutoff_limit_1:
          type: number
        battery_cutoff_limit_2:
          type: number
        usb_fps:
          type: number
        csi_fps:
          type: number
        bot_speaker_volume:
          type: number 
        bot_microphone_enable_disable:
          type: string
        csi_resolution:
          type: string
        output_resolution:
          type: string
        usb_resolution:
          type: string
        power_up_soc:
          type: number
        steering_motor_deadband:
          type: number
        dba4_Lift_motor_deadband:
          type: number
        dba7_Lift_motor_deadband:
          type: number
        spare_config_1:
          type: number
        spare_config_2:
          type: number

    BotUpdate:
      properties:
        bot_id:
          type: string
        associated_application:
          type: string
        associated_service_provider:
          type: string
        deployed_country:
          type: string
        deployed_state:
          type: string
        ip_address:
          type: string
        one_wheel_two_wheel_mode:
          type: string
        remote_auto_mode:
          type: string
        posting_frequency_packet_1:
          type: number
        posting_frequency_packet_1A:
          type: number
        posting_frequency_packet_2:
          type: number
        posting_frequency_packet_3:
          type: number
        hub_motor_rpm_limit:
          type: number
        hub_motor_timeout:
          type: number
        hub_motor_current_limit:
          type: number
        wheel_circumference:
          type: number
        steering_motor_rpm:
          type: number
        steering_motor_timeout:
          type: number
        steering_motor_encoder_front_caliberation:
          type: number
        steering_motor_encoder_rear_caliberation:
          type: number
        dba4_lift_motor_rpm:
          type: number
        dba4_lift_motor_timeout:
          type: number
        dba7_lift_motor_rpm:
          type: number
        dba7_lift_motor_timeout:
          type: number
        thermal_system_setpoint_low_side:
          type: number
        thermal_system_setpoint_high_side:
          type: number
        hysteris_high_side:
          type: number
        hysteris_low_side:
          type: number
        battery_cutoff_limit_1:
          type: number
        battery_cutoff_limit_2:
          type: number
        usb_fps:
          type: number
        csi_fps:
          type: number
        bot_speaker_volume:
          type: number 
        bot_microphone_enable_disable:
          type: string
        csi_resolution:
          type: string
        output_resolution:
          type: string
        usb_resolution:
          type: string
        power_up_soc:
          type: number
        steering_motor_deadband:
          type: number
        dba4_Lift_motor_deadband:
          type: number
        dba7_Lift_motor_deadband:
          type: number
        spare_config_1:
          type: number
        spare_config_2:
          type: number

        one_wheel_two_wheel_mode:
          type: string
        remote_auto_mode:
          type: string
        posting_frequency_packet_1:
          type: number
        posting_frequency_packet_2:
          type: number
        posting_frequency_packet_3:
          type: number
        hub_motor_rpm_limit:
          type: number
        hub_motor_current_limit:
          type: string
        wheel_circumference:
          type: number
        steering_motor_rpm:
          type: number
        steering_motor_timeout:
          type: number
        dba4_lift_motor_rpm:
          type: number
        dba4_lift_motor_timeout:
          type: number
        dba7_lift_motor_rpm:
          type: number
        dba7_lift_motor_timeout:
          type: number
        thermal_system_setpoint_low_side:
          type: number
        thermal_system_setpoint_high_side:
          type: number
        hysteris_low_side:
          type: number
        hysteris_high_side:
          type: number
        battery_cutoff_limit_1:
          type: number
        battery_cutoff_limit_2:
          type: number
        usb_fps:
          type: number
        csi_fps:
          type: number
        usb_resolution:
          type: number
        csi_resolution:
          type: number
        output_resolution:
          type: number
        bot_speaker_volume:
          type: number
        bot_microphone_enable_disable:
          type: string

    MaintenanceInfoCreate:
      properties:
        bot_id:
          type: string
        date_added:
          type: string
        performed_by:
          type: string
        remarks:
          type: string
        action:
          type: string
        downtime:
          type: number

    MaintenanceInfoUpdate:
      properties:
        maintenance_id:
          type: string
        bot_id:
          type: string
        performed_by:
          type: string
        remarks:
          type: string
        action:
          type: string

    ChargingStationCreate:
      properties:
        station_label:
          type: string
        location:
          type: object
          properties:
            lat:
              type: number
            long: 
              type: number
        locked_to_a_service_provider:
          type: boolean
        service_provider_id:
          type: string
        current_status:
          type: string

    ChargingStationUpdate:
      properties:
        station_id:
          type: string
        station_label:
          type: string
        location:
          type: object
          properties:
            lat:
              type: number
            long: 
              type: number
        service_provider_id:
          type: string
        current_status:
          type: string

    AppsCreate:
      properties:
        type_of_application:
          type: string
        app_id:
          type: string
        type_of_inventory:
          type: string
        posting_frequency_packet_1:
          type: number
        posting_frequency_packet_1A":
          type: number
        posting_frequency_packet_2":
          type: number
        posting_frequency_packet_3":
          type: number
        dispensing_lift_motor_timeout:
          type: number
        thermal_system_setpoint:
          type: number
        thermal_system_hysterisis:
          type: number
        battery_cutoff_limit_1:
          type: number
        battery_cutoff_limit_2:
          type: number
        spare_config_1:
          type: number
        spare_config_2:
          type: number
        spare_config_3:
          type: number
        spare_config_4:
          type: number
        spare_config_5:
          type: number
        
    AppsUpdate:
      properties:
        type_of_application:
          type: string
        app_id:
          type: string
        type_of_inventory:
          type: string
        posting_frequency_packet_1:
          type: number
        posting_frequency_packet_1A":
          type: number
        posting_frequency_packet_2":
          type: number
        posting_frequency_packet_3":
          type: number
        dispensing_lift_motor_timeout:
          type: number
        thermal_system_setpoint:
          type: number
        thermal_system_hysterisis:
          type: number
        battery_cutoff_limit_1:
          type: number
        battery_cutoff_limit_2:
          type: number
        spare_config_1:
          type: number
        spare_config_2:
          type: number
        spare_config_3:
          type: number
        spare_config_4:
          type: number
        spare_config_5:
          type: number

    ProductCreate:
      properties:
        type_of_product: 
          type: string #Beverages,Essentials,Alcohol,Snacks
        product_name:
          type: string
        flavour_variation:
          type: string
        volume:
          type: string #in ml,fl.oz,grams example:10 ml,10 fl.oz, 25gms
        package_type:
          type: string #Can or Bottle
        price:
          type: string
        tax:
          type: string 
        delivery:
          type: string  
        image_path:
          type: string

    ProductUpdate:
      properties:
        type_of_product:
          type: string
        product_name:
          type: string
        Product ID:
          type: string

    ServiceProviderCreate:
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        address:
          type: object
          properties:
            landmark:
              type: string
            town:
              type: string
            city: 
              type: string
            state: 
              type: string
            country:
              type: string
            code: 
              type: string
            
        email:
          type: string
        phone_number:
          type: string
        date_joined:
          type: string
        application_used:
          type: string
        country:
          type: string
        state:
          type: string
        region:
          type: string

    ServiceProviderUpdate:
      properties:
        address:
          type: object
          properties:
            landmark:
              type: string
            town:
              type: string
            city: 
              type: string
            state: 
              type: string
            country:
              type: string
            code: 
              type: string
        email:
          type: string
        phone_number:
          type: string
        unique_id:
          type: string
        application_used:
          type: string

    RemoteOperatorsCreate:
      properties:
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        date_joined:
          type: string
        mac_id:
          type: string
        address:
          type: object
          properties:
            landmark:
              type: string
            town:
              type: string
            city: 
              type: string
            state: 
              type: string
            country:
              type: string
            code: 
              type: string

    RemoteOperatorsUpdate:
      properties:
        unique_id:
          type: string
        email:
          type: string
        phone_number:
          type: string
        mac_id:
          type: string
        address:
          type: object
          properties:
            landmark:
              type: string
            town:
              type: string
            city: 
              type: string
            state: 
              type: string
            country:
              type: string
            code: 
              type: string

    UserCreate:
      properties:
        first_name:
          type: string
        last_name:
          type: string
        username:
          type: string
        password:
          type: string
        mobile_number:
         type: string
        email: 
          type: string
        role:
          type: string

    UserUpdate:
      properties:
        username:
          type: string #non-editable
        first_name:
          type: string
        last_name:
          type: string
        mobile_number:
          type: number
        email:
          type: string

    ChangePassword:
      properties:
        old_password:
          type: string
        new_password:
          type: string
      
    
    #inventory
    CreateInventory:
      description: request format for creating inventory
      properties:
        bot_id:
          type: string
          description: id of the bot
        trays:
          type: array
          description: containes tray objects
          items:
            type: object
            description: containes product_id,quantity and tray 
            properties:
              product_id:
                type: string
                description: id of the product
              product_name:
                type: string
                description: name of the product
              quantity:
                type: number
                description: quantity of the product
              tray:
                type: string
                description: tray name in which the product is kept
          
    UpdateInventory:
      description: request format for updating inventory quantity
      properties:
        inventory_id:
          type: string
          description: inventory id
        qunatity:
          type: number
          description: qunatity of the product to be updated
    
    DepleteInventry:
      description: request format for deplication of product quantity in the inventory
      properties:
        deplication:
          type: number
          description: amount of deplication to the available quantity

    CreateFirmware:
      description: request format for creating firmware
      properties:
        firmware_type:
          type: string
          description: type of the frimware
        version_number:
          type: string
          description: firmware version
        file_name:
          type: string
          description: name of the file
        file_path:
          type: string
          format: base64 encode
          
    # Response Objects

    LoginResponse200:
      type: object
      properties: 
        token: string

    LoginResponse400:
      type: object
      properties: 
        response_desc: string
    
    LoginResponse401:
      type: object
      properties: 
        response_desc: string

    LoginResponse403:
      type: object
      properties: 
        response_desc: string

    CreateResponse200:
      type: object
      properties:
        response_desc:
          type: string

    CreateResponse409:
      type: object
      properties:
        response_desc:
          type: string

    UpdateResponse200:
      type: object
      properties:
        response_desc:
          type: string

    UpdateResponse404:
      type: object
      properties:
        response_desc:
          type: string

    ShowResponse200:
      type: object
      properties:
        pagination:
          type: object
        response_desc:
          type: string
        data:
          type: object
        display_params:
          type: array
          description: array will contain first 5 table headers
          

    ReadResponse200:
      type: object
      properties: 
        response_desc:
          type: string
        data:
          type: object
        
    ReadResponse404:
      type: object
      properties: 
        response_desc:
          type: string

    DeleteResponse200:
      type: object
      properties: 
        response_desc: 
          type: string

    DeleteResponse404:
      type: object
      properties: 
        response_desc: 
          type: string
    
    DashboardResponse200:
      type: object
      properties:
        response_desc: 
          type: string
        dashboard_param:
          type: string
        data: 
          type: object

    ReportingResponse200:
      type: object
      properties:
        pagination:
          type: object
        response_desc:
          type: string
        data:
          type: object


    SearchResponse200:
      type: object
      properties:
        response_desc:
          type: string
        data:
          type: object

    StaticRealTimeMapsResponse200:
      type: object
      description: Operation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"
        data:
          type: array
          description: Array contains all the static map coordinates of service-providers and charging-stations
          items:
            type: object
            properties:
              coordinate_id:
                type: string
                description: id of the coordinate
              position:
                type: object
                description: contains lat and long of the location
                properties:
                  lat:
                    type: string
                    description: latitude of the location
                  long:
                    type: string
                    description: longitude of the location
              label:
                type: string
                description: location name
              type:
                type: string
                description: contains value service_provider/charging_station

    DynamicRealTimeMapsResponse200:
    description: Operation Successful
    type: object
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"
        data:
          type: array
          description: Array contains all the dynamic map coordinates of bots
          items:
            type: object
            properties:
              coordinate_id:
                type: string
                description: id of the coordinate
              position:
                type: object
                description: contains lat and long of the location
                properties:
                  lat:
                    type: string
                    description: latitude of the location
                  long:
                    type: string
                    description: longitude of the location
              label:
                type: string
                description: location name
              type:
                type: string
                description: contains value bot

    ChangePasswordResponse200:
      type: object
      description: Password Changed Successfully
      properties:
        response_desc:
          type: string
          description: contains message "" 
        data:
          type: object
    
    ChangePasswordResponse400:
      type: object
      description: Password Updation Failed
      properties:
        response_desc:
          type: string
          description: contains message "Password Updation Failed/You have Entered Invalid Old Password" 
    
    ChangePasswordResponse404:
      type: object
      description: User Not Found
      properties:
        response_desc:
          type: string
          description: contains message "User Not Found"
    
    ServerErrorResponse500:
      type: object  
      description: Internal Server Error
      properties:
        response_desc:
          type: string
          description: contains message "Internal Server Error"

    #Inventory Response Objects
    CreateInventoryResponse201:
      type: object
      description:  Inventory Creation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Created Successfully"
    
    CreateInventoryResponse400:
      type: object
      description: Inventory Creation Failed
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Creation Failed"
    
    CreateInventoryResponse409:
      type: object
      description: Inventory already exist
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Already Exist Under Mobility Device <bot_id>"
    
    UpdateInventoryResponse201:
      type: object
      description: Inventory Updated Successfully
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Updated Successfully"
    
    UpdateInventoryResponse400:
      type: object
      description: Inventory Update Failed
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Update Failed"
    
    UpdateInventoryResponse404:
      type: object
      description: Inventory Not Found
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Not Found"
    
    ReadInventoryResponse200:
      type: object
      description: Operation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"
        data:
          type: object
          description: containes inventory details
          properties:
            product_id:
              type: string
              description: product id
            product_name:
              type: string
              description: name of the product
            quantity:
              type: string
              description: quantity of the product
            service_provider:
              type: string
              description: service provider name
            bot_id:
              type: string
              description: id of the bot
            tray:
              type: string
              description: name of the in which the product is stored
            application_name:
              type: string
              description: name of the application
            datetime:
              type: string
              description: date of creation

            
    ReadInventoryResponse404:
      type: object
      description: Inventory Not Found
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Not Found" 
    
    DeleteInventoryResponse200:
      type: object
      description: Inventory Deleted
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Deleted Successfully"

    DeleteInventoryResponse404:
      type: object
      description: Inventory Not Found
      properties:
        response_desc:
          type: string
          description: contains message "Inventory Not Found"
    
    ShowInventoryResponse200:
      type: object
      description: Operation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"
        data:
          type: object
          description: containes array inventorys
          properties:
            inventorys:
              type: array
              description: array which holds inventory objects
              items:
                type: object
                properties:
                  product_id:
                    type: string
                    description: product id
                  product_name:
                    type: string
                    description: name of the product
                  quantity:
                    type: string
                    description: quantity of the product
                  service_provider:
                    type: string
                    description: name of the service provider
                  bot_id:
                    type: string
                    description: id of the bot
                  tray:
                    type: string
                    description: name of the in which the product is stored
                  application_name:
                    type: string
                    description: name of the application
                  datetime:
                    type: string
                    description: date of creation
        display_params:
          type: array
          description: array will containes display parameters
    
    DepleteInventryResponse200:
      type: object
      description: Updation Successful
      properties:
        type: string
        description: contains message "Inventory Updated Successfully"

    DepleteInventryResponse400:
      type: object
      description:  Available Quantity is Lesser than Requested One/Product is Not Available in the Inventory/Inventory Updation Failed
      properties:
        type: string
        description: contains message  "Insufficiant Quantity" or "Inventory Updation Failed"
     
    DepleteInventryResponse404:
      type: object
      description: Inventory Not Found
      properties:
        type: string
        description: contains message "Inventory Not Found" or "Requested Product Out Of Stock" 

    DoorOpenResponse200:
      type: object
      description: Operation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"

    CreateFirmwareResponse201:
      type: object
      description: Creation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Firmware Created Successfully"

    CreateFirmwareResponse400:
      type: object
      description: Creation Failed
      properties:
        response_desc:
          type: string
          description: contains message "Firmware Creation Failed"
    
    ReadFirmwareResponse200:
      type: string
      description: Operation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"
        data:
          type: object
          description: will contain Firmware details
          properties:
            firmware_id:
              type: string
              description: id of the inventory
            firmware_type:
              type: string
              description: type of the frimware
            version_number:
              type: string
              description: firmware version
            file_name:
              type: string
              description: name of the file
            date_time: 
              type: string
              description: date and time of creation

    ReadFirmwareResponse404:
      type: object
      description: firmware not found
      properties:
        response_desc:
          type: string
          description: contains message "Firmware Not Found"
    
    DeleteFirmwareResponse200:
      type: object
      description: firmware deleted
      properties:
        response_desc:
          type: string
          description: contains message "Firmware Deleted Successfully"
    
    DeleteFirmwareResponse404:
      type: object
      description: firmware not found
      properties:
        response_desc:
          type: string
          description: contains message "Firmware Not Found"

    ShowFirmwareResponse200:
      type: object:
      description: Operation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"
        data:
          type: object
          description: contains firmware array
          properties:
            firmware:
              type: array
              description: array will contain firmware objects
              items:
                type: object
                properties:
                  firmware_id:
                    type: string
                    description: id of the inventory
                  firmware_type:
                    type: string
                    description: type of the frimware
                  version_number:
                    type: string
                    description: firmware version
                  file_name:
                    type: string
                    description: name of the file
                  date_time: 
                    type: string
                    description: date and time of creation
    
    GetLatestResponse200:
      type: object
      description: Operation Successful
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"
        data:
          type: object
          description: contains latest version firmware details
          properties:
            firmware_id:
              type: string
              description: id of the inventory
            firmware_type:
              type: string
              description: type of the frimware
            version_number:
              type: string
              description: firmware version
            file_name:
              type: string
              description: name of the file
            date_time: 
              type: string
              description: date and time of creation

    GetLatestResponse404:
      type: object
      description: firmware not found
      properties:
        response_desc:
          type: string
          description: contains message "Firmware Not Found"

    ReadForCustomerResponse200:
      type: object
      description: operation successful
      properties:
        response_desc:
          type: string
          description: contains message "Operation Successful"
        data:
          type: object
          description: object containes front and back image paths of verification id
          properties:
            front:
              type: string
              format: base64 string
              description: image data
            back:
              type: string
              format: base64 string
              description: image data
            verfication_status:
              type: string
              description: id proof verification status. value will ve either "verified" or "not-verified" 
            
    
    ReadForCustomerResponse404:
      type: object
      description: Customer Not Found
      properties:
        response_desc:
          type: string
          description: contains message "Customer Not Found"

    ReadForCustomerResponse400:
      type: object
      description: Operation Failed
      properties:
        response_desc:
          type: string
          description: contains message "Read Operation Failed"


paths:
  #------------------------------------------------#
  #                  Login api                     #
  #-----------------------
    -------------------------#
  /mouvit/login:
    post:
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200": # status code
          description: Returns a jwt token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse200"
                # items:
                #   type: string
        "400":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse400"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse401"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse403"

  #------------------------------------------------#
  #                  Bot apis                      #
  #------------------------------------------------#
  /mouvit/bot/create:
    post:
      security:
        - bearerAuth: []
      summary: Creates a bot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotCreate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a message saying whether the creation is successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse200"
                # items:
                #   type: string
        "409":
          description: Returns a message saying whether the creation is successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse409"

  /mouvit/bot/update:
    put:
      security:
        - bearerAuth: []
      summary: Updates a bot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BotUpdate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Bot updation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse200"
                # items:
                #   type: string
        "404":
          description: Returns a message saying whether the updation is successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse404"

  /mouvit/bot/read:
    get:
      security:
        - bearerAuth: []
      summary: Read bot
      # description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: query
          name: botId
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the bot object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse200"
        "404":
          description: Bot does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse404"

  /mouvit/bot/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of bots
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a json array containing the bot objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowResponse200"

  /mouvit/bot/delete:
    delete:
      security:
        - bearerAuth: []
      summary: Delete bot
      parameters:
        - in: query
          name: id
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Bot deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse200"
        "404":
          description: Bot does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse404"

  #------------------------------------------------#
  #                  Maintenance info apis         #
  #------------------------------------------------#

  /mouvit/maintenance-info/create:
    post:
      security:
        - bearerAuth: []
      summary: Create Maintenance Info
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MaintenanceInfoCreate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse200"
        "409":
          description: Already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse409"

  /mouvit/maintenance-info/update:
    put:
      security:
        - bearerAuth: []
      summary: Updates a Maintenance Info
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MaintenanceInfoUpdate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Maintenance Info updation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse200"
                # items:
                #   type: string
        "404":
          description: Does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse404"

  /mouvit/maintenance-info/read:
    get:
      security:
        - bearerAuth: []
      summary: Read Maintenance Info
      # description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: query
          name: id #maintenance_id
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the Maintenance Info object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse200"
        "404":
          description: Remote operator does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse404"

  /mouvit/maintenance-info/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of Maintenance Info
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a json array containing the Maintenance Info objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowResponse200"

  /mouvit/maintenance-info/delete:
    delete:
      security:
        - bearerAuth: []
      summary: Delete remote operator
      parameters:
        - in: query
          name: id #maintenance_id
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Maintenance Info deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse200"
        "404":
          description: Maintenance Info does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse404"

  #------------------------------------------------#
  #                  Charging station apis         #
  #------------------------------------------------#

  /mouvit/charging-stations/create:
    post:
      security:
        - bearerAuth: []
      summary: Create Charging station
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChargingStationCreate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse200"
        "409":
          description: Already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse409"

  /mouvit/charging-stations/update:
    put:
      security:
        - bearerAuth: []
      summary: Updates a Charging station
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChargingStationUpdate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Charging station updation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse200"
                # items:
                #   type: string
        "404":
          description: Does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse404"

  /mouvit/charging-stations/read:
    get:
      security:
        - bearerAuth: []
      summary: Read Charging station
      # description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: query
          name: stationId
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the Charging station object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse200"

        "404":
          description: Charging station does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse404"

  /mouvit/charging-stations/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of Charging station
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a json array containing the Charging station objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowResponse200"


  /mouvit/charging-stations/delete:
    delete:
      security:
        - bearerAuth: []
      summary: Delete Charging station
      parameters:
        - in: query
          name: id
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Charging station deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse200"
        "404":
          description: Charging station does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse404"

  #------------------------------------------------#
  #                  Apps apis                     #
  #------------------------------------------------#

  /mouvit/applications/create:
    post:
      security:
        - bearerAuth: []
      summary: Create app
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppsCreate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse200"
        "409":
          description: Already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse409"

  /mouvit/apps/update:
    put:
      security:
        - bearerAuth: []
      summary: Updates a App
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppsUpdate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Apps updation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse200"
                # items:
                #   type: string
        "404":
          description: Does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse404"

  /mouvit/apps/read:
    get:
      security:
        - bearerAuth: []
      summary: Read bot
      # description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: query
          name: appsId
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the apps object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse200"

        "404":
          description: App does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse404"

  /mouvit/apps/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of apps
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a json array containing the app objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowResponse200"


  /mouvit/apps/delete:
    delete:
      security:
        - bearerAuth: []
      summary: Delete App
      parameters:
        - in: query
          name: id
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: App deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse200"
        "404":
          description: App does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse404"

  #------------------------------------------------#
  #                  Products apis                 #
  #------------------------------------------------#

  /mouvit/products/create:
    post:
      security:
        - bearerAuth: []
      summary: Create product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse200"
        "409":
          description: Already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse409"

  /mouvit/products/update:
    put:
      security:
        - bearerAuth: []
      summary: Updates a product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductUpdate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Product updation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse200"
                # items:
                #   type: string
        "404":
          description: Does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse404"

  /mouvit/products/read:
    get:
      security:
        - bearerAuth: []
      summary: Read bot
      # description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: query
          name: productsId
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the product object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse200"

        "404":
          description: Product does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse404"

  /mouvit/products/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a json array containing the product objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowResponse200"


  /mouvit/products/delete:
    delete:
      security:
        - bearerAuth: []
      summary: Delete Product
      parameters:
        - in: query
          name: id
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Product deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse200"
        "404":
          description: Product does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse404"

  #------------------------------------------------#
  #                  Service Provider apis         #
  #------------------------------------------------#

  /mouvit/service-provider/create:
    post:
      security:
        - bearerAuth: []
      summary: Create Service Provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceProviderCreate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse200"
        "409":
          description: Already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse409"

  /mouvit/service-provider/update:
    put:
      security:
        - bearerAuth: []
      summary: Updates a service provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceProviderUpdate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Service provider updation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse200"
                # items:
                #   type: string
        "404":
          description: Does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse404"

  /mouvit/service-provider/read:
    get:
      security:
        - bearerAuth: []
      summary: Read service provider
      # description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: query
          name: uniqueId
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the service provider object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse200"

        "404":
          description: Service provider does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse404"

  /mouvit/service-provider/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of service providers
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a json array containing the service provider objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowResponse200"


  /mouvit/service-provider/delete:
    delete:
      security:
        - bearerAuth: []
      summary: Delete service provider
      parameters:
        - in: query
          name: id
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Service provider deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse200"
        "404":
          description: Service provider does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse404"

  #------------------------------------------------#
  #                  Remote operators apis         #
  #------------------------------------------------#

  /mouvit/remote-operator/create:
    post:
      security:
        - bearerAuth: []
      summary: Create Remote operator
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoteOperatorsCreate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse200"
        "409":
          description: Already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse409"

  /mouvit/remote-operator/update:
    put:
      security:
        - bearerAuth: []
      summary: Updates a Remote operator
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoteOperatorsUpdate"
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Remote operator updation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse200"
                # items:
                #   type: string
        "404":
          description: Does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse404"

  /mouvit/remote-operator/read:
    get:
      security:
        - bearerAuth: []
      summary: Read Remote operator
      # description: Optional extended description in CommonMark or HTML.
      parameters:
        - in: query
          name: uniqueId
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the remote operator object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse200"

        "404":
          description: Remote operator does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse404"

  /mouvit/remote-operator/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of Remote operator
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a json array containing the remote operator objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowResponse200"


  /mouvit/remote-operator/delete:
    delete:
      security:
        - bearerAuth: []
      summary: Delete remote operator
      parameters:
        - in: query
          name: id
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Remote operator deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse200"
        "404":
          description: Remote operator does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse404"

  /mouvit/dashboard:
    get:
      security:
        - bearerAuth: []
      summary: get all the dashboard graphs and charts data added
      parameters:
        - in: query
          name: param
          schema:
            type: string
            enum:
              [
                orders_fulfilled,
                customers_signed_up,
                remote_drivers_online,
                service_providers_that_have_performed_an_order,
                orders_performed,
                customers_served,
                average_duration_of_an_order,
                active_bots_and_operators,
                hours_driven,
                usage_of_each_appilcation,
                number_of_bots_deployed_for_each_application,
                current_orders
              ]
      responses:
        "200": # status code
          description: Returns all the available data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardResponse200"

  /mouvit/reporting/mobility-device-reporting:
    get:
      security:
        - bearerAuth: []
      summary: get the data for mobilty devices reports
      parameters: 
        - in: query
          name: page
          schema:
            type: number
      responses:
        "200": # status code
          description: Returns an array of data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportingResponse200"

  /mouvit/reporting/service-provider-operation-reporting:
    get:
      security:
        - bearerAuth: []
      summary: get the data for service provider operation reports
      parameters: 
        - in: query
          name: page
          schema:
            type: number
      responses:
        "200": # status code
          description: Returns an array of data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportingResponse200"
      
  /mouvit/apps/search:
    get:
      security:
        - bearerAuth: []
      summary: get all the matching app_name in apps collection
      parameters:
        - in: query
          name: searchParam
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns an array of data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse200"
                
  /mouvit/service-provider/search:
    get:
      security:
        - bearerAuth: []
      summary: get all the matching last_name in service-provider collection
      parameters:
        - in: query
          name: searchParam
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns an array of data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse200"

  /mouvit/static/realtime-map:
    get:
      security:
        - bearerAuth:
      summary: Get the static lat and Long of service provider and charging station
      responses:
        "200":
          description: Returns an array of data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaticRealTimeMapsResponse200"
  
  /mouvit/dynamic/realtime-map:
    get:
      security:
        - bearerAuth:
      summary: Get the dynamic lat and long of bot
      responses:
        "200":
          description: Returns an array of data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DynamicRealTimeMapsResponse200"


  /mouvit/user/create:
    post:
      security:
       - bearerAuth:
      summary: Create the user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses: 
        "200":
          description: response of the user creation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse200"

  /mouvit/user/read:
    get:
      security:
       - bearerAuth:
      parameters:
        - in: query
          name: username
          schema:
            type: string
      summary: Read the user
      responses: 
        "200":
          description: response of the user read
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadResponse200"

  /mouvit/user/update:
    put:
      security:
       - bearerAuth:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      summary: Update the user
      responses: 
        "200":
          description: response of the user updation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResponse200"


  /mouvit/user/delete:
    delete:
      security:
       - bearerAuth:
      parameters:
        - in: query
          name: username
          schema:
            type: string
      summary: Delete the user
      responses: 
        "200":
          description: response of the user deletion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse200"

  /mouvit/user/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of users
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
      # description: Optional extended description in CommonMark or HTML.
      responses:
        "200": # status code
          description: Returns a json array containing the user objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowResponse200"

  /mouvit/user/changepassword:
    put:
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
      summary: Change user password
      responses:
        "201": # status code
          description: Password updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePasswordResponse200"
        "400": # status code
          description: Password updation failed/invalid old password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePasswordResponse400"
        "404": # status code
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePasswordResponse404"
        "500": # status code
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorResponse500"
            
        
  /mouvit/inventory/create:
    post:
      security:
        - bearerAuth: []
      summary: Create Inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInventory"
      responses:
        "201": # status code
          description: Creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInventoryResponse201"
        "409":
          description: Already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInventoryResponse409"
        "400":
          description: Creation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInventoryResponse400"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorResponse500"
  
  /mouvit/inventory/update:
    put:
      summary: to updated inventory
      parameters:
        - in: path
          name: inventory_id
          schema:
            type: string
          required: true
          description: unique id to identify the inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInventory'
      responses:
        '201':
          description: inventory details updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInventoryResponse201'
        '404':
          description: inventory details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInventoryResponse404'
        '400':
          description: inventory updation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateInventoryResponse400'
        '500':
          description:  internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse500'

  /mouvit/inventory/{inventory_id}:
    get:
      summary: to read inventory
      parameters:
        - in: path
          name: inventory_id
          schema:
            type: string
          required: true
          description: unique id to identify the inventory
      responses:
        '200':
          description: Operation successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadInventoryResponse200'
        '404':
          description: Inventory Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadInventoryResponse404'
        '500':
          description:  internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse500'

  /mouvit/inventory/delete:  
    delete:
      summary: to read inventory
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: unique id to identify the inventory
      responses:
        '200':
          description:  Inventory Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInventoryResponse200'
        '404':
          description: Inventory Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInventoryResponse404'
        '500':
          description:  internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse500'

  /mouvit/inventory/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of inventories
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the inventory objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowInventoryResponse200"
        "500": # status code
          description: Returns a json array containing the inventory objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorResponse500"

  /mouvit/inventory/action/deplete:
    get:
      security:
        - bearerAuth: []
      summary: Deplication of quantity available in the Inventory
      parameters:
        - in: query
          name: inventory_id
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepleteInventry'
      responses:
        "200": # status code
          description: Deplication Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepleteInventryResponse200"
        "400": # status code
          description: Insufficiant quantity/Inventory Updation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepleteInventryResponse200"
        "404":
          description: Inventory Not Found or Requested Product Out Of Stock
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepleteInventryResponse404"
        "500": # status code
          description: Returns a json array containing the inventory objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorResponse500"

  /mouvit/inventory/action/dooropen:
    get:
      security:
        - bearerAuth: []
      summary: Door Open request of mobility device
      parameters:
        - in: query
          name: bot_id
          schema:
            type: string
      responses:
        "200": # status code
          description: Operation Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoorOpenResponse200"
        
  /mouvit/firmware/create:
    post:
      security:
        - bearerAuth: []
      summary: Create Firmware
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFirmware"
      responses:
        "201": # status code
          description: Creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFirmwareResponse201"
        "400":
          description: Creation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFirmwareResponse400"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorResponse500"

  /mouvit/firmware/{firmware_id}:
    get:
      summary: to read firmware
      parameters:
        - in: path
          name: firmware_id
          schema:
            type: string
          required: true
          description: unique id to identify the firmware record
      responses:
        '200':
          description: Operation successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadFirmwareResponse200'
        '404':
          description: Firmware Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadFirmwareResponse404'
        '500':
          description:  internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse500'
/mouvit/firmware/delete:
    delete:
      summary: to delete firmware
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: unique id to identify the firmware
      responses:
        '200':
          description:  Firmware Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFirmwareResponse200'
        '404':
          description: Firmware Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFirmwareResponse404'
        '500':
          description:  internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerErrorResponse500'

  /mouvit/firmware/show:
    get:
      security:
        - bearerAuth: []
      summary: Show the list of firmware
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        "200": # status code
          description: Returns a json array containing the firmware objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowFirmwareResponse200"
        "500": # status code
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorResponse500"

  /mouvit/firmware/getlatest:
    get:
      security:
        - bearerAuth: []
      summary: Get the latest firm ware version
      parameters:
        - in: query
          name: firmware_type
          required: true
          schema:
            type: string
      responses:
        "200": 
          description: Operation Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLatestResponse200"
        "404":
          description: Operation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLatestResponse404"

        "500": # status code
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorResponse500"

  /mouvit/customers/read:
    get:
      security:
        - bearerAuth: []
      summary: Get user verification id images
      parameters:
        - in: query
          name: customer_id
          required: true
          schema:
            type: string
      responses:
        "200": 
          description: Operation Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadForCustomerResponse200"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadForCustomerResponse400"
        "400":
          description: Operation Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadForCustomerResponse400"

        "500": # status code
          description: server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorResponse500"

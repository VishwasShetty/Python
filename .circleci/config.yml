version: 2.1 
 
# Define the jobs we want to run for this project
orbs:    
  newman: postman/newman@0.0.2   
  # aws-cli: circleci/aws-cli@2.0 
   
jobs: 
  # start-ec2:
  #   docker: 
  #     - image: cibuilds/aws:1.16.1
  #   steps:
  #     - run: aws configure set aws_access_key_id $AWS_ACCESS_KEY
  #     - run: aws configure set aws_secret_access_key $AWS_SECRET_KEY
  #     - run: aws ec2 start-instances --region $AWS_EC2_REGION --instance-ids $AWS_EC2_INSTANCE_ID

  # check-for-ec2-status:  
  #   docker:  
  #     - image: cibuilds/aws:1.16.1  
  #   steps:
  #     - run: aws configure set aws_access_key_id $AWS_ACCESS_KEY
  #     - run: aws configure set aws_secret_access_key $AWS_SECRET_KEY
  #     - run: while INSTANCE_REACH_STATUS=$(aws ec2 describe-instance-status --region $AWS_EC2_REGION --instance-ids $AWS_EC2_INSTANCE_ID --output text --query 'InstanceStatuses[*].InstanceStatus.Details[*].Status'); test "$INSTANCE_REACH_STATUS" != "passed"; do sleep 5; echo -n '.'; done
  
  # #Deployment Command
  # pull-and-build:  
  #   docker:  
  #     - image: arvindr226/alpine-ssh 
  #   steps:  
  #     - run: apk add --update openssh-client git
  #     - checkout
  #     - run: ssh -oStrictHostKeyChecking=no -v $USER@$IP "./deploy.sh"
  #     # - run: 
  #     #     command: |
  #     #       'send deployment failuer status revert changes'
  #     #     when: on_fail

  newman-collection-run:
    executor: newman/postman-newman-docker
    steps:
      - checkout
      - newman/newman-run:
          collection: https://www.getpostman.com/collections/08cc238226b945438fd5?apikey=PMAK-61b05246b7832d003b3ec8da-84dbd14d8d07ffeae0eb6c58980aad9ebe \
          environment: https://go.postman.co/workspace/My-Workspace~ac310288-a672-4b3b-8c3e-e98f652651af/environment/14515040-26c6c244-d426-4c88-afab-3e3fdb1bd2d1
      # - run: 
      #     command: ssh -oStrictHostKeyChecking=no -v $USER@$IP "./revertdeploy.sh"
      #     when: on_fail 

  # # # #deploy to the test server
  # deploy:
  #   docker:
  #     - image: arvindr226/alpine-ssh
  #   steps:
  #     #ip and user of the test server
  #     - run: ssh -oStrictHostKeyChecking=no -v $USER@$IP "./deploytest.sh"

  # newman-collection-run-test:
  #   executor: newman/postman-newman-docker
  #   steps: 
  #     - checkout
  #     - newman/newman-run:
  #         collection: https://www.getpostman.com/collections/6446f5ecd440f49e4746?apikey=PMAK-61934b34bd1cd60051615fc3-a40f33edd7df44f1e7bf05b1fedefe47b7 
      # - run: 
      #     command: ssh -oStrictHostKeyChecking=no -v $USER@$IP "./revertdeploy.sh"
      #     when: on_fail
          
  # stop-ec2: 
  #   docker:
  #     - image: cibuilds/aws:1.16.1
  #   steps:
  #     - run: aws configure set aws_access_key_id $AWS_ACCESS_KEY
  #     - run: aws configure set aws_secret_access_key $AWS_SECRET_KEY
  #     - run: aws ec2 stop-instances --region $AWS_EC2_REGION --instance-ids $AWS_EC2_INSTANCE_ID

# Orchestrate our job run sequence
workflows:
  version: 2
  build-project:
    jobs:
      # - start-ec2

      # - check-for-ec2-status:
      #     requires:
      #       - start-ec2

      # - pull-and-build:
      #     requires:
      #       - check-for-ec2-status
      #     filters:
      #       branches:
      #         only:
      #           - master
                
      - newman-collection-run 
          # requires:
          #   - pull-and-build
          
      # - deploy:
      #     requires:
      #       - newman-collection-run
      
      # - newman-collection-run-test:
      #     requires:
      #       - deploy
         
      # - stop-ec2:
      #     requires:
      #       - newman-collection-run-test